{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// more info: https://code.visualstudio.com/docs/editor/userdefinedsnippets#:~:text=Code%20snippets%20are%20templates%20that,Snippet%20in%20the%20Command%20Palette).
	// NOTE: we can use `TM_SELECTED_TEXT` instead of `SELECTION`

	// add print to the highlighted text
	"py_print": {
		"prefix": "xyz",
		"body": [
			// "print(${0:${SELECTION}})" // with $0, the selection will be highlighted
			"print(${SELECTION})"
		],
		"description": "py_print"
	},

	// for using latest f-string feature (py 3.8) to debug
	"py_fprint": {
		"prefix": "xyzw",
		"body": [
			// "print(f\"{${0:${SELECTION}} = }\")"
			"print(f\"{${SELECTION} = }\")" // `\` is for escaping
		],
		"description": "py_fprint"
	},
	
	// for printing dataframe, so that we have a black line before printing
	"py_fprint_nl": {
		"prefix": "xyzw",
		"body": [
			"print(f\"\"\"{${0:${SELECTION}} = \n}\"\"\")"
		],
		"description": "py_fprint_nl"
	},


	"py_function": {
		"prefix": "zxvxs",
		"body": [
			"$1(${2:${SELECTION}})"
		],
		"description": "py_function"
	},

	"py_codeCell": {
		"prefix": "codeCell",
		"body": [
			"# %%\n"

		],
		"description": "py_codeCell"
	},

	"py_markdownCell": {
		"prefix": "markdownCell",
		"body": [
			"# %% [markdown] \n# "

		],
		"description": "markdownCell"
	},

	"for_loop_range": {
	"prefix": ["for_range"],
	"body": [
		//    "for ${1:item} in ${2:sequence}:",
		"for ${1:i} in range(${2:10}):",
		"\t${3:pass}",
		"$0"
	],
	"description": "for loop with range"
	},

	"create_function": {
	"prefix": ["def"],
	"body": [
		//    "for ${1:item} in ${2:sequence}:",
		"def ${1:f}(${2:x}):",
		"\t${3:pass}",
		"$0"
	],
	"description": "for loop with range"
	},

	

	/* --------------------------------- testing -------------------------------- */
	// remember:
	// use ${3|one,two,three|} to indicate choices
	// 
	"testing": {
	"prefix": "testing",
	"body": [
		// "${CURRENT_YEAR:default}",
		"hello: ${TM_SELECTED_TEXT:default}",
		// "${1:another ${2:placeholder}}",
		// "for $0 then $1 do $2 then ",
		// "${3|one,two,three|}",
	],
	"description": "Python for loop"
	}

	

}